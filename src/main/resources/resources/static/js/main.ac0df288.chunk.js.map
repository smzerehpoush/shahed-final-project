{
  "version": 3,
  "sources": [
    "shared/AxiosContext.tsx",
    "pages/Login.tsx",
    "pages/Home.tsx",
    "pages/Users.tsx",
    "shared/Drawer.tsx",
    "shared/AppRouter.tsx",
    "App.tsx",
    "reportWebVitals.ts",
    "index.tsx",
    "../external \"Cesium\""
  ],
  "names": [
    "AxiosContext",
    "createContext",
    "axios",
    "AxiosProvider",
    "children",
    "instance",
    "useMemo",
    "axiosInstance",
    "create",
    "baseURL",
    "headers",
    "interceptors",
    "request",
    "use",
    "config",
    "token",
    "localStorage",
    "getItem",
    "Authorization",
    "Provider",
    "value",
    "useAxios",
    "useContext",
    "theme",
    "createTheme",
    "Login",
    "navigate",
    "useNavigate",
    "login",
    "useMutation",
    "variables",
    "post",
    "onSuccess",
    "res",
    "context",
    "undefined",
    "data",
    "setItem",
    "replace",
    "ThemeProvider",
    "Container",
    "component",
    "maxWidth",
    "CssBaseline",
    "Box",
    "sx",
    "marginTop",
    "display",
    "flexDirection",
    "alignItems",
    "Avatar",
    "m",
    "bgcolor",
    "Typography",
    "variant",
    "onSubmit",
    "event",
    "preventDefault",
    "FormData",
    "currentTarget",
    "username",
    "get",
    "toString",
    "password",
    "mutate",
    "noValidate",
    "mt",
    "TextField",
    "margin",
    "required",
    "fullWidth",
    "id",
    "label",
    "name",
    "autoComplete",
    "autoFocus",
    "type",
    "FormControlLabel",
    "control",
    "Checkbox",
    "color",
    "Button",
    "mb",
    "Grid",
    "container",
    "item",
    "xs",
    "Link",
    "href",
    "points",
    "geo",
    "lat",
    "long",
    "height",
    "meta",
    "title",
    "description",
    "pixelSize",
    "Home",
    "fullscreenButton",
    "map",
    "point",
    "position",
    "Cartesian3",
    "fromDegrees",
    "Users",
    "useQuery",
    "then",
    "isLoading",
    "error",
    "isFetching",
    "console",
    "log",
    "padding",
    "TableContainer",
    "Paper",
    "Table",
    "minWidth",
    "TableHead",
    "TableRow",
    "TableCell",
    "align",
    "TableBody",
    "users",
    "user",
    "border",
    "scope",
    "AppDrawer",
    "React",
    "open",
    "setOpen",
    "toggleDrawer",
    "IconButton",
    "onClick",
    "Drawer",
    "anchor",
    "onClose",
    "width",
    "onKeyDown",
    "List",
    "ListItem",
    "button",
    "ListItemIcon",
    "ListItemText",
    "to",
    "App",
    "path",
    "element",
    "fallback",
    "queryClient",
    "QueryClient",
    "defaultOptions",
    "queries",
    "suspense",
    "client",
    "AppRouter",
    "reportWebVitals",
    "onPerfEntry",
    "Function",
    "getCLS",
    "getFID",
    "getFCP",
    "getLCP",
    "getTTFB",
    "Ion",
    "defaultAccessToken",
    "ReactDOM",
    "render",
    "StrictMode",
    "document",
    "getElementById",
    "module",
    "exports",
    "Cesium"
  ],
  "mappings": "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",
  "file": "static/js/main.ac0df288.chunk.js",
  "sourcesContent": [
    "import React, { createContext, useContext, useMemo } from \"react\";\nimport axios, { AxiosInstance } from \"axios\";\n\nexport const AxiosContext = createContext<AxiosInstance>(axios);\n\nexport function AxiosProvider({ children }: React.PropsWithChildren<unknown>) {\n  const instance = useMemo(() => {\n    const axiosInstance = axios.create({\n      baseURL: \"http://localhost:4040/api/v1/\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    axiosInstance.interceptors.request.use((config) => {\n      // Read token for anywhere, in this case directly from localStorage\n      const token = localStorage.getItem(\"token\");\n      if (token && config.headers) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n\n      return config;\n    });\n\n    return axiosInstance;\n  }, []);\n\n  return (\n    <AxiosContext.Provider value={instance}>{children}</AxiosContext.Provider>\n  );\n}\n\nexport function useAxios() {\n  return useContext(AxiosContext);\n}\n",
    "import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useMutation } from \"react-query\";\nimport { useAxios } from \"../shared/AxiosContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst theme = createTheme();\n\ninterface LoginInput {\n  username: string;\n  password: string;\n}\ninterface LoginResponse {\n  data: {\n    expireDate: number;\n    result: {\n      code: number;\n      status: string;\n    };\n    token: string;\n  };\n}\ntype LoginError = any;\n\nexport default function Login() {\n  const axios = useAxios();\n  const navigate = useNavigate();\n  const login = useMutation<LoginResponse, LoginError, LoginInput>(\n    (variables) => {\n      return axios.post(\"/users/login\", variables);\n    },\n    {\n      onSuccess: (res, variables, context) => {\n        if (res.data.token !== undefined) {\n          localStorage.setItem(\"token\", res.data.token);\n          navigate(\"/\", { replace: true });\n        }\n      },\n    }\n  );\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const username = (data.get(\"username\") || \"\").toString();\n    const password = (data.get(\"password\") || \"\").toString();\n    login.mutate({ username, password });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Log In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n",
    "import React from \"react\";\nimport { Entity, EntityDescription, PointGraphics, Viewer } from \"resium\";\nimport { Cartesian3 } from \"cesium\";\n\ninterface Point {\n  geo: { lat: number; long: number; height: number };\n  meta: { name: string; title: string; description: string; pixelSize: number };\n}\n\nconst points: Point[] = [\n  {\n    geo: { lat: -74.0707383, long: 40.7117244, height: 100 },\n    meta: {\n      name: \"Tokyo\",\n      title: \"Hello Tokyo\",\n      description: \"Tokyo is available here!\",\n      pixelSize: 10,\n    },\n  },\n  {\n    geo: { lat: -72.0707383, long: 30.7117244, height: 100 },\n    meta: {\n      name: \"Nowhere\",\n      title: \"Test location named Nowhere\",\n      description: \"Nowhere is available here!\",\n      pixelSize: 20,\n    },\n  },\n  {\n    geo: { lat: 35.0707383, long: 12.7117244, height: 100 },\n    meta: {\n      name: \"Loc1\",\n      title: \"Test location named Nowhere\",\n      description: \"Nowhere is available here!\",\n      pixelSize: 20,\n    },\n  },\n  {\n    geo: { lat: 72.0707383, long: -30.7117244, height: 100 },\n    meta: {\n      name: \"Loc2\",\n      title: \"Test location named Nowhere\",\n      description: \"Nowhere is available here!\",\n      pixelSize: 20,\n    },\n  },\n];\n\nexport default function Home() {\n  return (\n    <Viewer fullscreenButton>\n      {points.map((point) => {\n        const position = Cartesian3.fromDegrees(\n          point.geo.lat,\n          point.geo.long,\n          point.geo.height\n        );\n        return (\n          <Entity position={position} name={point.meta.name}>\n            <PointGraphics pixelSize={point.meta.pixelSize} />\n            <EntityDescription>\n              <h1>{point.meta.title}</h1>\n              <p>{point.meta.description}</p>\n            </EntityDescription>\n          </Entity>\n        );\n      })}\n    </Viewer>\n  );\n}\n",
    "import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useAxios } from \"../shared/AxiosContext\";\nimport { Box } from \"@mui/material\";\n\ninterface User {\n  id: string;\n  uniqueId: string;\n  username: string;\n}\n\nexport default function Users() {\n  const axios = useAxios();\n  const { isLoading, error, data, isFetching } = useQuery<{ users: User[] }>(\n    \"users\",\n    () => axios(\"/users/\", {}).then((res) => res.data)\n  );\n  console.log({ isLoading, error, data, isFetching });\n  return (\n    <Box sx={{ padding: 1 }}>\n      <h1>Users:</h1>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }}>\n          <TableHead>\n            <TableRow>\n              <TableCell>User ID</TableCell>\n              {/*<TableCell align=\"left\">Name</TableCell>*/}\n              <TableCell align=\"left\">Username</TableCell>\n              {/*<TableCell align=\"left\">Email</TableCell>*/}\n              {/*<TableCell align=\"left\">Phone</TableCell>*/}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data?.users.map((user) => (\n              <TableRow\n                key={user.id}\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  {user.id}\n                </TableCell>\n                {/*<TableCell align=\"left\">{user.name}</TableCell>*/}\n                <TableCell align=\"left\">{user.username}</TableCell>\n                {/*<TableCell align=\"left\">{user.email}</TableCell>*/}\n                {/*<TableCell align=\"left\">{user.phone}</TableCell>*/}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n}\n",
    "import * as React from \"react\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport AccountIcon from \"@mui/icons-material/AccountCircle\";\nimport UsersIcon from \"@mui/icons-material/People\";\nimport {\n  Box,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nexport default function AppDrawer() {\n  const [open, setOpen] = React.useState(false);\n\n  const toggleDrawer = () => setOpen(!open);\n\n  return (\n    <div>\n      <IconButton onClick={toggleDrawer}>\n        <MenuIcon />\n      </IconButton>\n      <Drawer anchor={\"left\"} open={open} onClose={toggleDrawer}>\n        <Box\n          sx={{ width: 250 }}\n          onClick={toggleDrawer}\n          onKeyDown={toggleDrawer}\n        >\n          <List>\n            <ListItem button>\n              <ListItemIcon>\n                <HomeIcon />\n              </ListItemIcon>\n              <ListItemText>\n                <Link to=\"/\">Home</Link>\n              </ListItemText>\n            </ListItem>\n            <ListItem button>\n              <ListItemIcon>\n                <AccountIcon />\n              </ListItemIcon>\n              <ListItemText>\n                <Link to=\"/login\">Login</Link>\n              </ListItemText>\n            </ListItem>\n            <ListItem button>\n              <ListItemIcon>\n                <UsersIcon />\n              </ListItemIcon>\n              <ListItemText>\n                <Link to=\"/users\">Users</Link>\n              </ListItemText>\n            </ListItem>\n          </List>\n        </Box>\n      </Drawer>\n    </div>\n  );\n}\n",
    "import React, { Suspense } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Login from \"../pages/Login\";\nimport Home from \"../pages/Home\";\nimport Users from \"../pages/Users\";\nimport AppDrawer from \"./Drawer\";\nimport { Box } from \"@mui/material\";\n\nfunction App() {\n  return (\n    <Router>\n      <Box sx={{ margin: 1 }}>\n        <AppDrawer />\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/about\" element={<div>About...</div>} />\n          <Route\n            path=\"/users\"\n            element={\n              <Suspense fallback={<span>Loading...</span>}>\n                <Users />\n              </Suspense>\n            }\n          />\n        </Routes>\n      </Box>\n    </Router>\n  );\n}\n\nexport default App;\n",
    "import React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport AppRouter from \"./shared/AppRouter\";\nimport { AxiosProvider } from \"./shared/AxiosContext\";\n\nfunction App() {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        suspense: true,\n      },\n    },\n  });\n  return (\n    <AxiosProvider>\n      <QueryClientProvider client={queryClient}>\n        <AppRouter />\n      </QueryClientProvider>\n    </AxiosProvider>\n  );\n}\n\nexport default App;\n",
    "import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",
    "import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Ion } from \"cesium\";\nIon.defaultAccessToken =\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIwYzM1ZTc4Yi01ODkxLTRjNjctYjg4Yy03YzZlOTMwZTJjZTYiLCJpZCI6NzQxMjcsImlhdCI6MTYzNzUwODU5MX0.UDnotJLH9qEoub-CstdHaPC2X1BPEe_bfa6rBMlIKPM\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",
    "module.exports = Cesium;"
  ],
  "sourceRoot": ""
}